{"version":3,"sources":["app/views/charts/echarts/LineChart.jsx","app/views/charts/echarts/AreaChart.jsx","app/views/charts/echarts/Doughnut.jsx","app/views/charts/echarts/ComparisonChart.jsx","app/views/charts/echarts/MelaliePerMonthChart.jsx"],"names":["LineChart","height","color","theme","useTheme","option","grid","top","bottom","left","right","legend","itemGap","icon","textStyle","palette","text","secondary","fontSize","fontFamily","tooltip","xAxis","type","data","axisLine","show","axisTick","axisLabel","yAxis","splitLine","lineStyle","opacity","series","stack","name","smooth","symbolSize","width","style","showGrid","boundaryGap","areaStyle","AreaChart","DoughnutChart","trigger","formatter","radius","center","avoidLabelOverlap","hoverOffset","stillShowZeroSum","label","normal","position","emphasis","fontWeight","labelLine","value","itemStyle","shadowBlur","shadowOffsetX","shadowColor","ComparisonChart","barGap","barMaxWidth","dataset","source","Container","styled","margin","breakpoints","down","marginBottom","MelaliePerMonthchart","className","routeSegments","path","title","primary","dark","main","light","sx","py"],"mappings":"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","file":"static/js/24.0c2da63a.chunk.js","sourcesContent":["import React from 'react'\nimport { useTheme } from '@mui/system'\nimport ReactEcharts from 'echarts-for-react'\n\nconst LineChart = ({ height, color = [] }) => {\n    const theme = useTheme()\n\n    const option = {\n        grid: {\n            top: '10%',\n            bottom: '10%',\n            left: '5%',\n            right: '5%',\n        },\n        legend: {\n            itemGap: 20,\n            icon: 'circle',\n            textStyle: {\n                color: theme.palette.text.secondary,\n                fontSize: 13,\n                fontFamily: 'roboto',\n            },\n        },\n        tooltip: {},\n        xAxis: {\n            type: 'category',\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            axisLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            axisLabel: {\n                color: theme.palette.text.secondary,\n                fontSize: 14,\n                fontFamily: 'roboto',\n            },\n        },\n        yAxis: {\n            type: 'value',\n            axisLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            splitLine: {\n                // show: false\n                lineStyle: {\n                    color: theme.palette.text.secondary,\n                    opacity: 0.15,\n                },\n            },\n            axisLabel: {\n                color: theme.palette.text.secondary,\n                fontSize: 13,\n                fontFamily: 'roboto',\n            },\n        },\n        series: [\n            {\n                data: [30, 40, 20, 50, 40, 80, 90],\n                type: 'line',\n                stack: 'This month',\n                name: 'This month',\n                smooth: true,\n                symbolSize: 4,\n                lineStyle: {\n                    width: 4,\n                },\n            },\n            {\n                data: [20, 50, 15, 50, 30, 70, 95],\n                type: 'line',\n                stack: 'Last month',\n                name: 'Last month',\n                smooth: true,\n                symbolSize: 4,\n                lineStyle: {\n                    width: 4,\n                },\n            },\n        ],\n    }\n\n    return (\n        <ReactEcharts\n            style={{ height: height }}\n            option={{\n                ...option,\n                color: [...color],\n            }}\n        />\n    )\n}\n\nexport default LineChart\n","import React from 'react'\nimport ReactEcharts from 'echarts-for-react'\n\nconst option = {\n    grid: {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n    },\n    legend: {},\n    tooltip: {},\n    xAxis: {\n        show: false,\n        type: 'category',\n        showGrid: false,\n        boundaryGap: false,\n    },\n    yAxis: {\n        show: false,\n        type: 'value',\n        splitLine: {\n            show: false,\n        },\n    },\n    series: [\n        {\n            //   data: [13, 4, 15, 6, 30, 8, 43],\n            data: [25, 18, 20, 30, 40, 43],\n            type: 'line',\n            areaStyle: {},\n            smooth: true,\n        },\n    ],\n}\n\nconst AreaChart = ({ height, color }) => {\n    return (\n        <ReactEcharts\n            style={{ height: height }}\n            option={{\n                ...option,\n                color: [...color],\n            }}\n        />\n    )\n}\n\nexport default AreaChart\n","import React from 'react'\nimport { useTheme } from '@mui/system'\nimport ReactEcharts from 'echarts-for-react'\n\nconst DoughnutChart = ({ height, color = [] }) => {\n    const theme = useTheme()\n\n    const option = {\n        legend: {\n            show: true,\n            itemGap: 20,\n            icon: 'circle',\n            bottom: 0,\n            textStyle: {\n                color: theme.palette.text.secondary,\n                fontSize: 13,\n                fontFamily: 'roboto',\n            },\n        },\n        tooltip: {\n            show: false,\n            trigger: 'item',\n            formatter: '{a} <br/>{b}: {c} ({d}%)',\n        },\n        xAxis: [\n            {\n                axisLine: {\n                    show: false,\n                },\n                splitLine: {\n                    show: false,\n                },\n            },\n        ],\n        yAxis: [\n            {\n                axisLine: {\n                    show: false,\n                },\n                splitLine: {\n                    show: false,\n                },\n            },\n        ],\n\n        series: [\n            {\n                name: 'Traffic Rate',\n                type: 'pie',\n                radius: ['45%', '72.55%'],\n                center: ['50%', '50%'],\n                avoidLabelOverlap: false,\n                hoverOffset: 5,\n                stillShowZeroSum: false,\n                label: {\n                    normal: {\n                        show: false,\n                        position: 'center', // shows the description data to center, turn off to show in right side\n                        textStyle: {\n                            color: theme.palette.text.secondary,\n                            fontSize: 13,\n                            fontFamily: 'roboto',\n                        },\n                        formatter: '{a}',\n                    },\n                    emphasis: {\n                        show: true,\n                        textStyle: {\n                            fontSize: '14',\n                            fontWeight: 'normal',\n                            // color: \"rgba(15, 21, 77, 1)\"\n                        },\n                        formatter: '{b} \\n{c} ({d}%)',\n                    },\n                },\n                labelLine: {\n                    normal: {\n                        show: false,\n                    },\n                },\n                data: [\n                    {\n                        value: 65,\n                        name: 'Google',\n                    },\n                    {\n                        value: 20,\n                        name: 'Facebook',\n                    },\n                    { value: 15, name: 'Others' },\n                ],\n                itemStyle: {\n                    emphasis: {\n                        shadowBlur: 10,\n                        shadowOffsetX: 0,\n                        shadowColor: 'rgba(0, 0, 0, 0.5)',\n                    },\n                },\n            },\n        ],\n    }\n\n    return (\n        <ReactEcharts\n            style={{ height: height }}\n            option={{\n                ...option,\n                color: [...color],\n            }}\n        />\n    )\n}\n\nexport default DoughnutChart\n","import React from 'react'\nimport { useTheme } from '@mui/system'\nimport ReactEcharts from 'echarts-for-react'\n\nconst ComparisonChart = ({ height, color = [] }) => {\n    const theme = useTheme()\n\n    const option = {\n        grid: {\n            top: '10%',\n            bottom: '10%',\n            right: '5%',\n        },\n        legend: {\n            show: false,\n        },\n        color: ['#223388', 'rgba(34, 51, 136, 0.8)'],\n        barGap: 0,\n        barMaxWidth: '64px',\n        tooltip: {},\n        dataset: {\n            source: [\n                ['Month', 'Website', 'App'],\n                ['Jan', 2200, 1200],\n                ['Feb', 800, 500],\n                ['Mar', 700, 1350],\n                ['Apr', 1500, 1250],\n                ['May', 2450, 450],\n                ['June', 1700, 1250],\n            ],\n        },\n        xAxis: {\n            type: 'category',\n            axisLine: {\n                show: false,\n            },\n            splitLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            axisLabel: {\n                color: theme.palette.text.secondary,\n                fontSize: 13,\n                fontFamily: 'roboto',\n            },\n        },\n        yAxis: {\n            axisLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            splitLine: {\n                // show: false\n                lineStyle: {\n                    color: theme.palette.text.secondary,\n                    opacity: 0.15,\n                },\n            },\n            axisLabel: {\n                color: theme.palette.text.secondary,\n                fontSize: 13,\n                fontFamily: 'roboto',\n            },\n        },\n        // Declare several bar series, each will be mapped\n        // to a column of dataset.source by default.\n        series: [{ type: 'bar' }, { type: 'bar' }],\n    }\n\n    return (\n        <ReactEcharts\n            style={{ height: height }}\n            option={{\n                ...option,\n                // color: [...color],\n            }}\n        />\n    )\n}\n\nexport default ComparisonChart\n","import React from 'react'\nimport LineChart from './LineChart'\nimport AreaChart from './AreaChart'\nimport { useTheme, Box, styled } from '@mui/system'\nimport DoughnutChart from './Doughnut'\nimport ComparisonChart from './ComparisonChart'\nimport SimpleCard from 'app/components/cards/SimpleCard'\nimport Breadcrumb from 'app/components/Breadcrumb/Breadcrumb'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst MelaliePerMonthchart = () => {\n    const theme = useTheme()\n    return (\n        <Container>\n            <div className=\"breadcrumb\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Charts', path: '/charts' },\n                        { name: 'Echarts' },\n                    ]}\n                />\n            </div>\n\n            <SimpleCard title=\"Doughnut Chart\">\n                <DoughnutChart\n                    height=\"350px\"\n                    color={[\n                        theme.palette.primary.dark,\n                        theme.palette.primary.main,\n                        theme.palette.primary.light,\n                    ]}\n                />\n            </SimpleCard>\n            <Box sx={{ py: '12px' }} />\n            <SimpleCard title=\"Line Chart\">\n                <LineChart\n                    height=\"350px\"\n                    color={[\n                        theme.palette.primary.main,\n                        theme.palette.primary.light,\n                    ]}\n                />\n            </SimpleCard>\n            <Box sx={{ py: '12px' }} />\n            <SimpleCard title=\"Comparison Chart\">\n                <ComparisonChart\n                    height=\"350px\"\n                    color={[\n                        theme.palette.primary.dark,\n                        // theme.palette.primary.main,\n                        theme.palette.primary.light,\n                    ]}\n                />\n            </SimpleCard>\n            <Box sx={{ py: '12px' }} />\n            <SimpleCard title=\"Area Chart\">\n                <AreaChart\n                    height=\"350px\"\n                    color={[theme.palette.primary.main]}\n                />\n            </SimpleCard>\n        </Container>\n    )\n}\n\nexport default MelaliePerMonthchart\n"],"sourceRoot":""}