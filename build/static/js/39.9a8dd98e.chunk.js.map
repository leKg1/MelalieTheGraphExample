{"version":3,"sources":["app/views/material-kit/switch/SijmpleSwitch.jsx","app/views/material-kit/switch/LabelledSwitch.jsx","app/views/material-kit/switch/FormGroupSwitch.jsx","app/views/material-kit/switch/CustomizedSwitch.jsx","app/views/material-kit/switch/PlacingSwitchLabel.jsx","app/views/material-kit/switch/AppSwitch.jsx"],"names":["SimpleSwitch","React","useState","checkedA","checkedB","state","setState","handleChange","name","event","target","checked","Switch","onChange","value","inputProps","color","disabled","defaultChecked","LabelledSwitch","FormGroup","row","FormControlLabel","control","label","FormGroupSwitch","gilad","jason","antoine","FormControl","component","FormLabel","FormHelperText","PurpleSwitch","styled","purple","backgroundColor","IOSSwitch","theme","width","height","padding","margin","spacing","transform","palette","common","white","opacity","border","borderRadius","grey","transition","transitions","create","AntSwitch","display","primary","main","borderColor","boxShadow","CustomizedSwitch","checkedC","focusVisibleClassName","disableRipple","classes","root","switchBase","thumb","track","Typography","Grid","container","alignItems","item","PlacingSwitchLabel","setValue","labelPlacement","Container","breakpoints","down","marginBottom","AppSwitch","className","routeSegments","path","title","Box","py"],"mappings":"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","file":"static/js/39.9a8dd98e.chunk.js","sourcesContent":["import React from 'react'\nimport Switch from '@mui/material/Switch'\n\nexport default function SimpleSwitch() {\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n    })\n\n    const handleChange = (name) => (event) => {\n        setState({ ...state, [name]: event.target.checked })\n    }\n\n    return (\n        <div>\n            <Switch\n                checked={state.checkedA}\n                onChange={handleChange('checkedA')}\n                value=\"checkedA\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />\n            <Switch\n                checked={state.checkedB}\n                onChange={handleChange('checkedB')}\n                value=\"checkedB\"\n                color=\"primary\"\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n            />\n            <Switch\n                value=\"checkedC\"\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n            />\n            <Switch\n                disabled\n                value=\"checkedD\"\n                inputProps={{ 'aria-label': 'disabled checkbox' }}\n            />\n            <Switch\n                disabled\n                checked\n                value=\"checkedE\"\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n            />\n            <Switch\n                defaultChecked\n                value=\"checkedF\"\n                color=\"default\"\n                inputProps={{ 'aria-label': 'checkbox with default color' }}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport Switch from '@mui/material/Switch'\nimport FormGroup from '@mui/material/FormGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\n\nexport default function LabelledSwitch() {\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n    })\n\n    const handleChange = (name) => (event) => {\n        setState({ ...state, [name]: event.target.checked })\n    }\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={state.checkedA}\n                        onChange={handleChange('checkedA')}\n                        value=\"checkedA\"\n                    />\n                }\n                label=\"Secondary\"\n            />\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={state.checkedB}\n                        onChange={handleChange('checkedB')}\n                        value=\"checkedB\"\n                        color=\"primary\"\n                    />\n                }\n                label=\"Primary\"\n            />\n            <FormControlLabel\n                control={<Switch value=\"checkedC\" />}\n                label=\"Uncontrolled\"\n            />\n            <FormControlLabel\n                disabled\n                control={<Switch value=\"checkedD\" />}\n                label=\"Disabled\"\n            />\n            <FormControlLabel\n                disabled\n                control={<Switch checked value=\"checkedE\" />}\n                label=\"Disabled\"\n            />\n        </FormGroup>\n    )\n}\n","import React from 'react'\nimport FormLabel from '@mui/material/FormLabel'\nimport FormControl from '@mui/material/FormControl'\nimport FormGroup from '@mui/material/FormGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Switch from '@mui/material/Switch'\n\nexport default function FormGroupSwitch() {\n    const [state, setState] = React.useState({\n        gilad: true,\n        jason: false,\n        antoine: true,\n    })\n\n    const handleChange = (name) => (event) => {\n        setState({ ...state, [name]: event.target.checked })\n    }\n\n    return (\n        <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n            <FormGroup>\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={state.gilad}\n                            onChange={handleChange('gilad')}\n                            value=\"gilad\"\n                        />\n                    }\n                    label=\"Gilad Gray\"\n                />\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={state.jason}\n                            onChange={handleChange('jason')}\n                            value=\"jason\"\n                        />\n                    }\n                    label=\"Jason Killian\"\n                />\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={state.antoine}\n                            onChange={handleChange('antoine')}\n                            value=\"antoine\"\n                        />\n                    }\n                    label=\"Antoine Llorca\"\n                />\n            </FormGroup>\n            <FormHelperText>Be careful</FormHelperText>\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { purple } from '@mui/material/colors'\nimport FormGroup from '@mui/material/FormGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Grid from '@mui/material/Grid'\nimport { styled } from '@mui/system'\nimport Typography from '@mui/material/Typography'\n\nconst PurpleSwitch = styled(Switch)(() => ({\n    '&.switchBase': {\n        color: purple[300],\n        '&$checked': {\n            color: purple[500],\n        },\n        '&$checked + $track': {\n            backgroundColor: purple[500],\n        },\n    },\n}))\n\nconst IOSSwitch = styled(Switch)(({ theme }) => ({\n    '&.root': {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    '&.switchBase': {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    '&.thumb': {\n        width: 24,\n        height: 24,\n    },\n    '&.track': {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    '&.checked': {},\n    '&.focusVisible': {},\n}))\n\nconst AntSwitch = styled(Switch)(({ theme }) => ({\n    '&.root': {\n        width: 28,\n        height: 16,\n        padding: 0,\n        display: 'flex',\n    },\n    '&.switchBase': {\n        padding: 2,\n        color: theme.palette.grey[500],\n        '&$checked': {\n            transform: 'translateX(12px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                opacity: 1,\n                backgroundColor: theme.palette.primary.main,\n                borderColor: theme.palette.primary.main,\n            },\n        },\n    },\n    '&.thumb': {\n        width: 12,\n        height: 12,\n        boxShadow: 'none',\n    },\n    '&.track': {\n        border: `1px solid ${theme.palette.grey[500]}`,\n        borderRadius: 16 / 2,\n        opacity: 1,\n        backgroundColor: theme.palette.common.white,\n    },\n    '&.checked': {},\n}))\n\nexport default function CustomizedSwitch() {\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    })\n    const handleChange = (name) => (event) => {\n        setState({ ...state, [name]: event.target.checked })\n    }\n\n    return (\n        <FormGroup>\n            <FormControlLabel\n                control={\n                    <PurpleSwitch\n                        checked={state.checkedA}\n                        onChange={handleChange('checkedA')}\n                        value=\"checkedA\"\n                    />\n                }\n                label=\"Custom color\"\n            />\n            <FormControlLabel\n                control={\n                    <IOSSwitch\n                        checked={state.checkedB}\n                        onChange={handleChange('checkedB')}\n                        value=\"checkedB\"\n                        focusVisibleClassName='focusVisible'\n                        disableRipple\n                        classes={{\n                            root: 'root',\n                            switchBase: 'switchBase',\n                            thumb: 'thumb',\n                            track: 'track',\n                            checked: 'checked',\n                        }}\n                    />\n                }\n                label=\"iOS style\"\n            />\n            <Typography component=\"div\">\n                <Grid\n                    component=\"label\"\n                    container\n                    alignItems=\"center\"\n                    spacing={1}\n                >\n                    <Grid item>Off</Grid>\n                    <Grid item>\n                        <AntSwitch\n                            checked={state.checkedC}\n                            onChange={handleChange('checkedC')}\n                            value=\"checkedC\"\n                        />\n                    </Grid>\n                    <Grid item>On</Grid>\n                </Grid>\n            </Typography>\n        </FormGroup>\n    )\n}\n","import React from 'react'\nimport Switch from '@mui/material/Switch'\nimport FormGroup from '@mui/material/FormGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport FormControl from '@mui/material/FormControl'\nimport FormLabel from '@mui/material/FormLabel'\n\nfunction PlacingSwitchLabel() {\n    const [value, setValue] = React.useState('female')\n\n    function handleChange(event) {\n        setValue(event.target.value)\n    }\n\n    return (\n        <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">labelPlacement</FormLabel>\n            <FormGroup\n                aria-label=\"position\"\n                name=\"position\"\n                value={value}\n                onChange={handleChange}\n                row\n            >\n                <FormControlLabel\n                    value=\"top\"\n                    control={<Switch color=\"primary\" />}\n                    label=\"Top\"\n                    labelPlacement=\"top\"\n                />\n                <FormControlLabel\n                    value=\"start\"\n                    control={<Switch color=\"primary\" />}\n                    label=\"Start\"\n                    labelPlacement=\"start\"\n                />\n                <FormControlLabel\n                    value=\"bottom\"\n                    control={<Switch color=\"primary\" />}\n                    label=\"Bottom\"\n                    labelPlacement=\"bottom\"\n                />\n                <FormControlLabel\n                    value=\"end\"\n                    control={<Switch color=\"primary\" />}\n                    label=\"End\"\n                    labelPlacement=\"end\"\n                />\n            </FormGroup>\n        </FormControl>\n    )\n}\n\nexport default PlacingSwitchLabel\n","import React from 'react'\nimport SimpleSwitch from './SijmpleSwitch'\nimport LabelledSwitch from './LabelledSwitch'\nimport FormGroupSwitch from './FormGroupSwitch'\nimport CustomizedSwitch from './CustomizedSwitch'\nimport PlacingSwitchLabel from './PlacingSwitchLabel'\nimport { Breadcrumb, SimpleCard } from 'app/components'\nimport { Box, styled } from '@mui/system'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst AppSwitch = () => {\n    return (\n        <Container>\n            <div className=\"mb-sm-30\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Material', path: '/material' },\n                        { name: 'Switch' },\n                    ]}\n                />\n            </div>\n            <SimpleCard title=\"Simple Switch\">\n                <SimpleSwitch />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"Switch with Label\">\n                <LabelledSwitch />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"Switch with Form Group\">\n                <FormGroupSwitch />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"Customized Switch\">\n                <CustomizedSwitch />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"Switch with Different Label Placement\">\n                <PlacingSwitchLabel />\n            </SimpleCard>\n        </Container>\n    )\n}\n\nexport default AppSwitch\n"],"sourceRoot":""}